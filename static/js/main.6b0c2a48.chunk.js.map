{"version":3,"sources":["components/Settings/Settings.tsx","redux/counterReducer.ts","components/Settings/SettingsContainer.tsx","components/Counter/Counter.tsx","components/Counter/CounterContainer.tsx","App.tsx","reportWebVitals.ts","redux/store.tsx","index.tsx"],"names":["Settings","props","className","error","value","minValue","type","onChange","event","setMessage","currentTarget","setMinValue","maxValue","setError","setMaxValue","disabled","disableBtnSet","onClick","setMinValueToCounterValue","disableBtnInc","disableBtnReset","INCREMENT","RESET","SET_MIN_VALUE","SET_MAX_VALUE","SET_MIN_VALUE_TO_COUNTER","SET_DISABLE_INC_RESET","SET_ERROR_MESSAGE","SET_ERROR","SET_MESSAGE","initialState","counterValue","errorMessage","message","console","log","SettingsContainer","connect","state","counter","dispatch","valueMin","SetMinValueAC","valueMax","SetMaxValueAC","SetMinValueToCounterAC","setMessageAC","setErrorMessageAC","setErrorAC","Counter","increment","reset","mapStateToProps","CounterContainer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","store","createStore","serialisedState","localStorage","getItem","JSON","parse","e","warn","loadFromLocalStorage","subscribe","stringify","setItem","saveToLocalStorage","getState","ReactDOM","render","document","getElementById"],"mappings":"gPAoEeA,G,kBAhDE,SAACC,GA+BjB,OACC,sBAAKC,UAAU,WAAf,UACC,sBAAKA,UAAU,gBAAf,UACC,mBAAGA,UAAU,qBAAb,wBACA,uBAAOA,UAAYD,EAAME,MAAQ,oBAAqB,aAAcC,MAAOH,EAAMI,SAAUC,KAAM,SAAUC,SAjCvF,SAACC,GACvBP,EAAMQ,WAAW,8BACjB,IAAML,GAASI,EAAME,cAAcN,MACnCH,EAAMU,YAAYP,GAAO,GAAO,GAAM,GAEtC,IAAMQ,EAAaX,EAAMW,SACpBR,EAAQQ,GAAYR,IAAUQ,GAAYR,EAAQ,GAAKQ,EAAW,GAAKR,EAAQQ,EACnFX,EAAMY,UAAS,GAAM,GAErBZ,EAAMY,UAAS,GAAO,SA0BtB,sBAAKX,UAAU,gBAAf,UACC,mBAAGA,UAAU,qBAAb,wBACA,uBAAOA,UAAYD,EAAME,MAAQ,oBAAqB,aAAeC,MAAOH,EAAMW,SAAUN,KAAM,SAAUC,SAzBxF,SAACC,GACvBP,EAAMQ,WAAW,8BACjB,IAAML,GAASI,EAAME,cAAcN,MACnCH,EAAMa,YAAYV,GAAO,GAAO,GAAM,GAEtC,IAAMC,EAAaJ,EAAMI,SACrBD,EAAQ,GAAKA,IAAUC,GAAYD,EAAQC,GAAYA,EAAW,EACrEJ,EAAMY,UAAS,GAAM,GAErBZ,EAAMY,UAAS,GAAO,SAoBtB,wBAAQX,UAAW,SAAWa,WAAUd,EAAME,OAAeF,EAAMe,cAAeC,QAhBlD,WACjChB,EAAMiB,0BAA0BjB,EAAMI,SAAUJ,EAAMe,cAAef,EAAMkB,cAAelB,EAAMmB,kBAe/F,sB,cC7DGC,EAAY,YACZC,EAAQ,QACRC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAA2B,2BAC3BC,EAAwB,wBACxBC,EAAoB,oBACpBC,EAAY,YACZC,EAAc,cAyBdC,EAAiC,CACtCC,aAAc,EACd1B,SAAU,EACVO,SAAU,EACVI,eAAe,EACfI,iBAAiB,EACjBD,eAAe,EACfa,aAAc,iBACdC,QAAS,GACT9B,OAAO,GAGR+B,QAAQC,IAAIL,EAAa3B,OAElB,ICKQiC,EAFWC,aAvCF,SAACC,GACxB,MAAO,CACNP,aAAcO,EAAMP,aACpB1B,SAAUiC,EAAMC,QAAQlC,SACxBO,SAAU0B,EAAMC,QAAQ3B,SACxBI,cAAesB,EAAMC,QAAQvB,cAC7BI,gBAAiBkB,EAAMC,QAAQnB,gBAC/BD,cAAemB,EAAMC,QAAQpB,cAC7BhB,MAAOmC,EAAMC,QAAQpC,MACrB8B,QAASK,EAAMC,QAAQN,YAKE,SAACO,GAC3B,MAAO,CACN7B,YAAa,SAAC8B,EAAkBzB,EAAwBG,EAAwBC,GAC/EoB,EDhB0B,SAACC,EAAkBzB,EAAwBG,EAAwBC,GAAnE,MAAiG,CAAEd,KAAMiB,EAAekB,WAAUzB,gBAAeG,gBAAeC,mBCgBjLsB,CAAcD,EAAUzB,EAAeG,EAAeA,KAGhEL,YAAa,SAAC6B,EAAkB3B,EAAwBG,EAAwBC,GAC/EoB,EDnB0B,SAACG,EAAkB3B,EAAyBG,EAAwBC,GAApE,MAAkG,CAAEd,KAAMkB,EAAemB,WAAU3B,gBAAeG,gBAAeC,mBCmBlLwB,CAAcD,EAAU3B,EAAeG,EAAeC,KAEhEF,0BAA2B,SAACuB,EAAkBzB,EAAwBG,EAAwBC,GAC7FoB,EDrBmC,SAACC,EAAmBzB,EAAwBG,EAAwBC,GAApE,MAAmG,CAAEd,KAAMmB,EAA2BgB,WAAUzB,gBAAeG,gBAAeC,mBCqBxMyB,CAAuBJ,GAAWzB,GAAgBG,GAAgBC,KAE5EX,WAAW,SAACwB,GACXO,EDpByB,SAACP,GAAD,MAAsB,CAAE3B,KAAMuB,EAAaI,WCoB3Da,CAAab,KAEvBD,aAAc,SAACA,GACdQ,EDzB8B,SAACR,GAAD,MAA2B,CAAE1B,KAAMqB,EAAmBK,gBCyB3Ee,CAAkBf,KAE5BnB,SAAU,SAACV,EAAgBa,GAC1BwB,ED3BuB,SAACrC,EAAgBa,GAAjB,MAA6C,CAAEV,KAAMsB,EAAWzB,QAAOa,iBC2BrFgC,CAAW7C,EAAOa,QAMJqB,CAA6CrC,GCbxDiD,G,MAvBC,SAAChD,GAKhB,OACC,sBAAKC,UAAU,UAAf,UACC,mBAAGA,UAAWD,EAAM8B,eAAiB9B,EAAMW,SAAY,kBAAoB,eAA3E,SACGX,EAAME,MAAQF,EAAM+B,aAAe/B,EAAMkB,cAAgBlB,EAAMgC,QAAUhC,EAAM8B,eAElF,sBAAK7B,UAAU,eAAf,UAKC,wBAAQA,UAAW,SAAUe,QAdd,WAAQhB,EAAMiD,aAezBnC,SAAUd,EAAM8B,aAAe9B,EAAMW,UAAYX,EAAME,MAAQF,EAAMkB,eAAiBlB,EAAMkB,cADhG,iBAEA,wBAAQjB,UAAW,SAAUe,QAflB,WAAQhB,EAAMkD,SAeoBpC,SAAUd,EAAMmB,gBAA7D,2BCfEgC,EAAkB,SAACd,GACxB,MAAO,CACNP,aAAcO,EAAMC,QAAQR,aAC5B1B,SAAUiC,EAAMC,QAAQlC,SACxBO,SAAU0B,EAAMC,QAAQ3B,SACxBQ,gBAAiBkB,EAAMC,QAAQnB,gBAC/BD,cAAemB,EAAMC,QAAQpB,cAC7BhB,MAAOmC,EAAMC,QAAQpC,MACrB8B,QAASK,EAAMC,QAAQN,QACvBD,aAAcM,EAAMC,QAAQP,eAG9BE,QAAQC,IAAIiB,GAEZ,IAYeC,EADUhB,YAAQe,GAXN,SAACZ,GAC3B,MAAO,CACNU,UAAW,WACVV,EHvB+B,CAAElC,KAAMe,KGyBxC8B,MAAO,WACNX,EHzB2B,CAAElC,KAAMgB,QG8Bbe,CAA6CY,GCxBvDK,EAdsB,WACnC,OACE,sBAAKpD,UAAU,MAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,cAAC,EAAD,MAGF,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,UCCOqD,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCmBd,IAAMQ,EAAgBC,YAAgB,CACrC1B,QNoB6B,WAAoF,IAAnFD,EAAkF,uDAAxDR,EAAcoC,EAA0C,uCAChH,OAAQA,EAAO5D,MACd,KAAKe,EACJ,OAAO,2BACHiB,GADJ,IAECP,aAAcO,EAAMP,aAAe,IAErC,KAAKT,EACJ,OAAO,2BACHgB,GADJ,IAECP,aAAcO,EAAMjC,WAEtB,KAAKkB,EACJ,OAAO,2BACHe,GADJ,IAECjC,SAAU6D,EAAOzB,SACjBzB,cAAekD,EAAOlD,cACtBG,cAAe+C,EAAO/C,cACtBC,gBAAiB8C,EAAO9C,kBAE1B,KAAKI,EACJ,OAAO,2BACHc,GADJ,IAEC1B,SAAUsD,EAAOvB,SACjB3B,cAAekD,EAAOlD,cACtBG,cAAe+C,EAAO/C,cACtBC,gBAAiB8C,EAAO9C,kBAE1B,KAAKK,EACJ,OAAO,2BACHa,GADJ,IAECP,aAAcmC,EAAOzB,SACrBzB,cAAekD,EAAOlD,cACtBG,cAAe+C,EAAO/C,cACtBC,gBAAiB8C,EAAO9C,kBAE1B,KAAKM,EACJ,OAAO,2BACHY,GADJ,IAECnB,eAAgB+C,EAAO/C,cACvBC,iBAAkB8C,EAAO9C,kBAE3B,KAAKS,EACJ,OAAO,2BACHS,GADJ,IAECL,QAASiC,EAAOjC,UAElB,KAAKN,EACJ,OAAO,2BACHW,GADJ,IAECN,aAAckC,EAAOlC,eAEvB,KAAKJ,EACH,OAAO,2BACHU,GADJ,IAECnC,MAAO+D,EAAO/D,MACda,cAAekD,EAAOlD,gBAEzB,QACC,OAAOsB,MM5EG6B,EAAsBC,YAAYJ,EAnB/C,WACC,IACC,IAAMK,EAAkBC,aAAaC,QAAQ,mBAC7C,GAAwB,OAApBF,EAA0B,OAC9B,OAAOG,KAAKC,MAAMJ,GACjB,MAAOK,GAER,YADAxC,QAAQyC,KAAKD,IAa0CE,IAEzDT,EAAMU,WAAU,kBA9BhB,SAA0CvC,GACzC,IACC,IAAM+B,EAAkBG,KAAKM,UAAUxC,GACvCgC,aAAaS,QAAQ,kBAAmBV,GACvC,MAAOK,GACRxC,QAAQyC,KAAKD,IAyBOM,CAAmBb,EAAMc,eCzB/CC,IAASC,OACR,cAAC,IAAD,CAAUhB,MAAOA,EAAjB,SACC,cAAC,EAAD,MAGDiB,SAASC,eAAe,SAIzB9B,M","file":"static/js/main.6b0c2a48.chunk.js","sourcesContent":["import React, {ChangeEvent} from 'react';\nimport './Settings.css';\n\ntype SettingsPropsType = {\n\tdisableBtnReset: boolean\n\tdisableBtnInc: boolean\n\tminValue: number\n\tmaxValue: number\n\tcounterValue: number\n\tdisableBtnSet: boolean\n\tsetMinValue: (valueMin: number, disableBtnSet: boolean, disableBtnInc: boolean, disableBtnReset: boolean) => void\n\tsetMaxValue: (valueMax: number, disableBtnSet: boolean, disableBtnInc: boolean, disableBtnReset: boolean) => void\n\tsetMinValueToCounterValue: (valueMin: number, disableBtnSet: boolean, disableBtnInc: boolean, disableBtnReset: boolean) => void\n\tsetMessage: (message: string) => void\n\terrorMessage: (message: string) => void\n\tsetError: (error: boolean, disableBtnSet: boolean) => void\n\terror: boolean\n\tmessage: string\n}\n\nconst Settings = (props: SettingsPropsType) => {\n\n\tconst changeMinValue = (event: ChangeEvent<HTMLInputElement>) => {\n\t\tprops.setMessage('enter values and press SET')\n\t\tconst value = +event.currentTarget.value;\n\t\tprops.setMinValue(value, false, true, true)\n\n\t\tconst maxValue  =  props.maxValue;\n\t\tif ( value > maxValue || value === maxValue || value < 0 || maxValue < 0 && value < maxValue ) {\n\t\t\tprops.setError(true, true);\n\t\t} else {\n\t\t\tprops.setError(false, false);\n\t\t}\n\t}\n\tconst changeMaxValue = (event: ChangeEvent<HTMLInputElement>) => {\n\t\tprops.setMessage('enter values and press SET')\n\t\tconst value = +event.currentTarget.value;\n\t\tprops.setMaxValue(value, false, true, true)\n\n\t\tconst minValue  =  props.minValue;\n\t\tif (value < 0 || value === minValue || value < minValue || minValue < 0) {\n\t\t\tprops.setError(true, true);\n\t\t} else {\n\t\t\tprops.setError(false, false);\n\t\t}\n\t}\n\n\tconst setMinValueToCounterValue = () => {\n\t\tprops.setMinValueToCounterValue(props.minValue, props.disableBtnSet, props.disableBtnInc, props.disableBtnReset)\n\t}\n\n\treturn (\n\t\t<div className=\"settings\">\n\t\t\t<div className='settings__min'>\n\t\t\t\t<p className='settings__min-text'>min value:</p>\n\t\t\t\t<input className={ props.error ? 'value__min--error': 'value__min'} value={props.minValue} type={'number'} onChange={changeMinValue}/>\n\t\t\t</div>\n\t\t\t<div className='settings__max'>\n\t\t\t\t<p className='settings__min-text'>max value:</p>\n\t\t\t\t<input className={ props.error ? 'value__max--error': 'value__max'}  value={props.maxValue} type={'number'} onChange={changeMaxValue}/>\n\t\t\t</div>\n\t\t\t{/*<Button title='Set'/>*/}\n\t\t\t{/*<button className={'button'}  disabled={props.disableBtnSet} onClick={setMinValueToCounterValue}>SET</button>*/}\n\t\t\t<button className={'button'}  disabled={props.error ? true : props.disableBtnSet} onClick={setMinValueToCounterValue}>SET</button>\n\t\t</div>\n\t);\n}\n\nexport default Settings;\n","import {ActionsType} from './actionCreators';\n\nconst INCREMENT = 'INCREMENT'\nconst RESET = 'RESET'\nconst SET_MIN_VALUE = 'SET_MIN_VALUE'\nconst SET_MAX_VALUE = 'SET_MAX_VALUE'\nconst SET_MIN_VALUE_TO_COUNTER = 'SET_MIN_VALUE_TO_COUNTER'\nconst SET_DISABLE_INC_RESET = 'SET_DISABLE_INC_RESET'\nconst SET_ERROR_MESSAGE = 'SET_ERROR_MESSAGE'\nconst SET_ERROR = 'SET_ERROR'\nconst SET_MESSAGE = 'SET_MESSAGE'\n\nexport const IncrementAC = () => ({ type: INCREMENT } as const)\nexport const ResetAC = () => ({ type: RESET } as const)\nexport const SetMinValueAC = (valueMin: number, disableBtnSet: boolean, disableBtnInc: boolean, disableBtnReset: boolean) => ({ type: SET_MIN_VALUE, valueMin, disableBtnSet, disableBtnInc, disableBtnReset } as const)\nexport const SetMaxValueAC = (valueMax: number, disableBtnSet: boolean,  disableBtnInc: boolean, disableBtnReset: boolean) => ({ type: SET_MAX_VALUE, valueMax, disableBtnSet, disableBtnInc, disableBtnReset } as const)\nexport const SetMinValueToCounterAC = (valueMin: number,  disableBtnSet: boolean, disableBtnInc: boolean, disableBtnReset: boolean ) => ({ type: SET_MIN_VALUE_TO_COUNTER,  valueMin, disableBtnSet, disableBtnInc, disableBtnReset} as const)\nexport const DisabledIncResetAC = (disableBtnInc: boolean, disableBtnReset: boolean) => ({ type: SET_DISABLE_INC_RESET, disableBtnInc, disableBtnReset} as const)\nexport const setErrorMessageAC = (errorMessage: string) => ({ type: SET_ERROR_MESSAGE, errorMessage } as const)\nexport const setErrorAC = (error: boolean, disableBtnSet: boolean) => ({ type: SET_ERROR, error, disableBtnSet } as const)\nexport const setMessageAC = (message: string) => ({ type: SET_MESSAGE, message } as const)\n\n\nexport type initialStateType = {\n\tcounterValue: number\n\tminValue: number\n\tmaxValue: number\n\tdisableBtnSet: boolean\n\tdisableBtnReset: boolean\n\tdisableBtnInc: boolean\n\terrorMessage: string\n\tmessage: string\n\terror: boolean\n}\n\nconst initialState: initialStateType = {\n\tcounterValue: 0,\n\tminValue: 0,\n\tmaxValue: 5,\n\tdisableBtnSet: true,\n\tdisableBtnReset: false,\n\tdisableBtnInc: false,\n\terrorMessage: 'Invalid error!',\n\tmessage: '',\n\terror: false\n}\n\nconsole.log(initialState.error)\n\nexport const counterReducer = (state: initialStateType = initialState, action: ActionsType): initialStateType => {\n\tswitch (action.type) {\n\t\tcase INCREMENT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcounterValue: state.counterValue + 1\n\t\t\t}\n\t\tcase RESET:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcounterValue: state.minValue\n\t\t\t}\n\t\tcase SET_MIN_VALUE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tminValue: action.valueMin,\n\t\t\t\tdisableBtnSet: action.disableBtnSet,\n\t\t\t\tdisableBtnInc: action.disableBtnInc,\n\t\t\t\tdisableBtnReset: action.disableBtnReset\n\t\t\t}\n\t\tcase SET_MAX_VALUE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmaxValue: action.valueMax,\n\t\t\t\tdisableBtnSet: action.disableBtnSet,\n\t\t\t\tdisableBtnInc: action.disableBtnInc,\n\t\t\t\tdisableBtnReset: action.disableBtnReset\n\t\t\t}\n\t\tcase SET_MIN_VALUE_TO_COUNTER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcounterValue: action.valueMin,\n\t\t\t\tdisableBtnSet: action.disableBtnSet,\n\t\t\t\tdisableBtnInc: action.disableBtnInc,\n\t\t\t\tdisableBtnReset: action.disableBtnReset\n\t\t\t}\n\t\tcase SET_DISABLE_INC_RESET:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdisableBtnInc: !action.disableBtnInc,\n\t\t\t\tdisableBtnReset: !action.disableBtnReset\n\t\t\t}\n\t\tcase SET_MESSAGE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmessage: action.message\n\t\t\t}\n\t\tcase SET_ERROR_MESSAGE\t:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terrorMessage: action.errorMessage,\n\t\t\t}\n\t\tcase SET_ERROR:\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\terror: action.error,\n\t\t\t\t\tdisableBtnSet: action.disableBtnSet,\n\t\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}","import React from 'react';\nimport './Settings.css';\nimport Settings from './Settings';\nimport {connect} from 'react-redux';\nimport {\n\tsetErrorAC,\n\tsetErrorMessageAC,\n\tSetMaxValueAC, setMessageAC,\n\tSetMinValueAC,\n\tSetMinValueToCounterAC\n} from '../../redux/counterReducer';\n\n\nconst mapStateToProps = (state: any) => {\n\treturn {\n\t\tcounterValue: state.counterValue,\n\t\tminValue: state.counter.minValue,\n\t\tmaxValue: state.counter.maxValue,\n\t\tdisableBtnSet: state.counter.disableBtnSet,\n\t\tdisableBtnReset: state.counter.disableBtnReset,\n\t\tdisableBtnInc: state.counter.disableBtnInc,\n\t\terror: state.counter.error,\n\t\tmessage: state.counter.message\n\t}\n}\n\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\tsetMinValue: (valueMin: number, disableBtnSet: boolean, disableBtnInc: boolean, disableBtnReset: boolean) => {\n\t\t\tdispatch(SetMinValueAC(valueMin, disableBtnSet, disableBtnInc, disableBtnInc))\n\t\t},\n\n\t\tsetMaxValue: (valueMax: number, disableBtnSet: boolean, disableBtnInc: boolean, disableBtnReset: boolean) => {\n\t\t\tdispatch(SetMaxValueAC(valueMax, disableBtnSet, disableBtnInc, disableBtnReset))\n\t\t},\n\t\tsetMinValueToCounterValue: (valueMin: number, disableBtnSet: boolean, disableBtnInc: boolean, disableBtnReset: boolean) => {\n\t\t\tdispatch(SetMinValueToCounterAC(valueMin, !disableBtnSet, !disableBtnInc, !disableBtnReset))\n\t\t},\n\t\tsetMessage:(message: string) => {\n\t\t\tdispatch(setMessageAC(message))\n\t\t},\n\t\terrorMessage: (errorMessage: string) => {\n\t\t\tdispatch(setErrorMessageAC(errorMessage))\n\t\t},\n\t\tsetError: (error: boolean, disableBtnSet: boolean) => {\n\t\t\tdispatch(setErrorAC(error, disableBtnSet))\n\t\t}\n\t}\n}\n\n\nconst SettingsContainer = connect(mapStateToProps, mapDispatchToProps)(Settings);\n\nexport default SettingsContainer;","import React from 'react';\nimport './Counter.css';\n\ntype CounterPropsType = {\n\tcounterValue: number\n\tminValue: number\n\tmaxValue: number\n\tincrement: () => void\n\treset: () => void\n\tdisableBtnReset: boolean\n\tdisableBtnInc: boolean\n\tmessage: string\n\terror: boolean\n\terrorMessage: boolean\n}\n\nconst Counter = (props: CounterPropsType) => {\n\tconst increment = () => { props.increment() }\n\tconst reset = () => { props.reset() }\n\n\n\treturn (\n\t\t<div className='counter'>\n\t\t\t<p className={props.counterValue === props.maxValue  ? 'counterValueMax' : 'counterValue'}>\n\t\t\t\t{ props.error ? props.errorMessage : props.disableBtnInc ? props.message : props.counterValue }\n\t\t\t</p>\n\t\t\t<div className='app__btn-box'>\n\n\t\t\t\t{/*<Button title='inc' />*/}\n\t\t\t\t{/*<Button title='reset' />*/}\n\n\t\t\t\t<button className={'button'} onClick={increment}\n\t\t\t\t\t\t\t\tdisabled={props.counterValue < props.maxValue || props.error ? props.disableBtnInc : !props.disableBtnInc}>INC</button>\n\t\t\t\t<button className={'button'} onClick={reset} disabled={props.disableBtnReset}>RESET</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Counter;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport Counter from './Counter';\nimport {IncrementAC, ResetAC} from '../../redux/counterReducer';\n\n\n// type mapStateToPropsType = {\n// \tcounterValue: number\n// \tminValue: number\n// \tmaxValue: number\n// \tdisableBtnReset: boolean\n// \tdisableBtnInc: boolean\n// \terror: boolean\n// \tmessage: string\n// \terrorMessage: string\n// }\n\n\nconst mapStateToProps = (state: any) => {\n\treturn {\n\t\tcounterValue: state.counter.counterValue,\n\t\tminValue: state.counter.minValue,\n\t\tmaxValue: state.counter.maxValue,\n\t\tdisableBtnReset: state.counter.disableBtnReset,\n\t\tdisableBtnInc: state.counter.disableBtnInc,\n\t\terror: state.counter.error,\n\t\tmessage: state.counter.message,\n\t\terrorMessage: state.counter.errorMessage\n\t}\n}\nconsole.log(mapStateToProps)\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\tincrement: () => {\n\t\t\tdispatch(IncrementAC())\n\t\t},\n\t\treset: () => {\n\t\t\tdispatch(ResetAC())\n\t\t}\n\t}\n}\n\nconst CounterContainer = connect(mapStateToProps, mapDispatchToProps)(Counter);\nexport default CounterContainer;","import React from 'react';\nimport './App.css';\nimport SettingsContainer from './components/Settings/SettingsContainer';\nimport CounterContainer from './components/Counter/CounterContainer';\n\nconst App: React.FunctionComponent = () => {\n  return (\n    <div className=\"app\">\n      <div className='app__settings'>\n        <SettingsContainer/>\n      </div>\n\n      <div className='app__counter'>\n        <CounterContainer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from 'redux';\nimport {counterReducer} from './counterReducer';\n\n\nfunction saveToLocalStorage<AppStateType>(state: AppStateType) {\n\ttry {\n\t\tconst serialisedState = JSON.stringify(state);\n\t\tlocalStorage.setItem(\"persistantState\", serialisedState);\n\t} catch (e) {\n\t\tconsole.warn(e);\n\t}\n}\n\nfunction loadFromLocalStorage() {\n\ttry {\n\t\tconst serialisedState = localStorage.getItem(\"persistantState\");\n\t\tif (serialisedState === null) return undefined;\n\t\treturn JSON.parse(serialisedState);\n\t} catch (e) {\n\t\tconsole.warn(e);\n\t\treturn undefined;\n\t}\n}\n\n\nexport type AppStateType = ReturnType<typeof reducers>\n\n\nconst reducers: any = combineReducers({\n\tcounter: counterReducer\n});\n\nexport const store: AppStateType = createStore(reducers, loadFromLocalStorage())\n\nstore.subscribe(() => saveToLocalStorage(store.getState()));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport {store} from './redux/store';\n\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App/>\n\t</Provider>\n\t,\n\tdocument.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}